@model RazApp.Web.Models.RegisterExternalLoginModel
@{
    ViewBag.Title = "Register";
}


<div class="span12">

<div class="row">
    <div class="span12">
        <div class="alert alert-info ">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <h4 class="alert-heading">Thanks!</h4>
            <p>
                You've successfully authenticated with <strong>@ViewBag.ProviderDisplayName</strong>.
            Please enter a user name for this site below and click the Confirm button to finish
            logging in.
            </p>
        </div>
    </div>
</div>
<div class="row">
    <div class="box span12">
        <div class="box-header well">
            <h2><i class="icon-edit"></i>Complete Registration</h2>
        </div>

        <div class="box-content">

            @using (Html.BeginForm("ExternalLoginConfirmation", "User", new { ReturnUrl = ViewBag.ReturnUrl }))
            { 
                <div class="alert alert-error">
                   <button type="button" class="close" data-dismiss="alert">×</button>&nbsp;
                     @Html.ValidationSummary(true)
                </div>
                @Html.AntiForgeryToken()
                <fieldset>                  
                    <div class="control-group">
                        <label class="control-label">Username</label>                       
                            @Html.TextBoxFor(model => model.UserName, new { @class = "input-xlarge focused" })
                            <span class="help-inline">@Html.ValidationMessageFor(m => m.UserName)</span>
                      
                    </div>
                    <div class="control-group">
                        <label class="control-label">Password</label>                      
                            @Html.TextBoxFor(model => model.Mobile, new { @class = "input-xlarge focused" })
                            <span class="help-inline">@Html.ValidationMessageFor(m => m.Mobile)</span>                     
                    </div>

                    <div class="control-group">
                        <label class="control-label">Email</label>                     
                            @Html.TextBoxFor(model => model.Email, new { @class = "input-xlarge focused" })
                            <span class="help-inline">@Html.ValidationMessageFor(m => m.Email)</span>                       
                    </div>
                    <div class="control-group">
                        <label class="control-label">Address</label>                       
                            @Html.TextAreaFor(model => model.Address, new { @class = "input-xlarge focused autogrow" })
                            <span class="help-inline">@Html.ValidationMessageFor(m => m.Address)</span>                      
                    </div>

                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary">Confirm</button>
                        <button class="btn" type="reset">Cancel</button>
                    </div>
                </fieldset>
                @Html.HiddenFor(m => m.ExternalLoginData)
            }

        </div>
    </div>

</div>
    </div>


    @Scripts.Render("~/bundles/jqueryval")
